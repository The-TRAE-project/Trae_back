version: "3.9"
services:

  react-app:
    image: traebuilds/frontend
    container_name: trae_front
    ports:
      - '3000:80'
    environment:
      - VITE_BACK_API_URL=http://195.80.51.155:8088/api
      - TZ="Europe/Moscow"
    networks:
      - trae-net
    depends_on:
      - backend

  backend:
    image: traebuilds/backend
    container_name: trae_back
    ports:
      - "8088:8088"
      #- "5005:5005" #debug port
    environment:
      - "TZ=Europe/Moscow"
      - "SPRING_PROFILES_ACTIVE=prod"
      - "POSTGRES_URL=${PG_URL}"
      - "POSTGRES_USER=${PG_USER}"
      - "POSTGRES_PASS=${PG_PASSWORD}"
      - "JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}"
      - "JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}"
    networks:
      - trae-net
    depends_on:
      - postgres-backend

  postgres-backend:
    image: postgres:15.2
    container_name: postgres_db
    ports:
      - "${PG_PORT}:${PG_PORT}"
    command: -p ${PG_PORT}
    environment:
      TZ: "Europe/Moscow"
      PGUSER: "${PG_USER}"
      POSTGRES_USER: "${PG_USER}"
      POSTGRES_PASSWORD: "${PG_PASSWORD}"
      POSTGRES_DB: "${PG_DB}"
    volumes:
      - "database:/var/lib/postgresql/data"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: on-failure
    networks:
      - trae-net

volumes:
  database:

networks:
  trae-net:
    name: trae-net
    driver: bridge
